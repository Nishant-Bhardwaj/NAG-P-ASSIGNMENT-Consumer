## Eureka Server
spring.application.name=consumer-service-nishant
server.port=8083

## Disable self registration:
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.client.serviceUrl.defaultZone=http://eureka-server-nishant:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.registry-fetch-interval-seconds=3

#eureka.instance.hostname=consumer-service-nishant
eureka.instance.hostname=localhost
eureka.instance.preferIpAddress=false

## Actuator:
management.endpoints.web.exposure.include=*

## Resilience 4j circuit breaker configuration :
resilience4j.circuitbreaker.instances.CircuitBreakerService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.CircuitBreakerService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.CircuitBreakerService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.CircuitBreakerService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.CircuitBreakerService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-size=10
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-type=count_based

## Resilience 4j retry configuration :
resilience4j.retry.instances.RetryConfig.max-attempts=3
resilience4j.retry.instances.RetryConfig.wait-duration=1s
spring.cloud.compatibility-verifier.enabled=false

## Resilience 4j Rate limiter configuration :
resilience4j.ratelimiter.instances.RateLimitService.limit-for-period=1000
resilience4j.ratelimiter.instances.RateLimitService.limit-refresh-period=1s
resilience4j.ratelimiter.instances.RateLimitService.timeout-duration=0

## RabbitMQ properties:
spring.rabbitmq.host = rabbitmq
spring.rabbitmq.port =  15672
spring.rabbitmq.password = guest
spring.rabbitmq.username = guest
spring.rabbitmq.exchange = supplier.exchange

## Flight RMQ config
spring.rabbitmq.flight_queue_confirm = flight.supplier.queue_confirm
spring.rabbitmq.flight_queue_cancel = flight.supplier.queue_cancel
spring.rabbitmq.flight_routingKey_confirm = flight.supplier.routingKey_confirm
spring.rabbitmq.flight_routingKey_cancel = flight.supplier.routingKey_cancel

## Hotel RMQ config
spring.rabbitmq.hotel_queue_confirm = hotel.supplier.queue_confirm
spring.rabbitmq.hotel_queue_cancel = hotel.supplier.queue_cancel
spring.rabbitmq.hotel_routingKey_confirm = hotel.supplier.routingKey_confirm
spring.rabbitmq.hotel_routingKey_cancel = hotel.supplier.routingKey_cancel

## H2 Database:
spring.h2.console.enabled= true
spring.h2.console.path= /h2/console
spring.h2.console.settings.web-allow-others=true

spring.datasource.url= jdbc:h2:file:./test
spring.datasource.driverClassName= org.h2.Driver
spring.datasource.username= admin
spring.datasource.password= admin

spring.jpa.database-platform= org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto= update

opentracing.jaeger.http-sender.url= http://127.0.0.1:14268/api/traces
#opentracing.jaeger.http-sender.url= http://jaeger-allinone:14268/api/traces